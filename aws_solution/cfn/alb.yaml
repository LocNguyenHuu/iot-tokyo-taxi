---
AWSTemplateFormatVersion: '2010-09-09'
Description: Stack to Create ElasticLoadBalancingV2 Resources
Parameters:
  StackName:
    Type: String
  VpcId:
    Description: Name of VPC
    Type: AWS::EC2::VPC::Id
  PublicSubnets:
    Description: Choose which PublicSubnets the Applicaion Load Balancer should be deployed to
    Type: List<AWS::EC2::Subnet::Id>
Resources:
  TargetGroupSourceHttp9000:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub tg-source-http-9000-${StackName}
      TargetType: instance
      VpcId: !Ref VpcId
      Port: 9000
      Protocol: HTTP
      HealthCheckIntervalSeconds: 60
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 10
      Matcher:
        HttpCode: '405'
  TargetGroupSinkStomp9210:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub tg-sink-stomp-9210-${StackName}
      TargetType: instance
      VpcId: !Ref VpcId
      Port: 9210
      Protocol: HTTP
      HealthCheckIntervalSeconds: 60
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 10
      Matcher:
        HttpCode: '404'
  TargetGroupSinkStomp9400:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub tg-sink-stomp-9400-${StackName}
      TargetType: instance
      VpcId: !Ref VpcId
      Port: 9400
      Protocol: HTTP
      HealthCheckIntervalSeconds: 60
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 10
      Matcher:
        HttpCode: '404'
  TargetGroupSinkStomp9410:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub tg-sink-stomp-9410-${StackName}
      TargetType: instance
      VpcId: !Ref VpcId
      Port: 9410
      Protocol: HTTP
      HealthCheckIntervalSeconds: 60
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 10
      Matcher:
        HttpCode: '404'
  Listener9000:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroupSourceHttp9000
      LoadBalancerArn: !Ref LoadBalancer
      Port: 9000
      Protocol: HTTP
  Listener9210:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroupSinkStomp9210
      LoadBalancerArn: !Ref LoadBalancer
      Port: 9210
      Protocol: HTTP
  Listener9400:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroupSinkStomp9400
      LoadBalancerArn: !Ref LoadBalancer
      Port: 9400
      Protocol: HTTP
  Listener9410:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroupSinkStomp9410
      LoadBalancerArn: !Ref LoadBalancer
      Port: 9410
      Protocol: HTTP
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub alb-${StackName}
      Type: application
      Scheme: internet-facing
      Subnets: !Ref PublicSubnets
Outputs:
  LoadBalancerDns: 
    Description: A reference to the DNS of the LoadBalancer
    Value: !GetAtt LoadBalancer.DNSName
  TargetGroupSourceHttp9000Arn:
    Value: !Ref TargetGroupSourceHttp9000
  TargetGroupSinkStomp9210Arn:
    Value: !Ref TargetGroupSinkStomp9210
  TargetGroupSinkStomp9400Arn:
    Value: !Ref TargetGroupSinkStomp9400
  TargetGroupSinkStomp9410Arn:
    Value: !Ref TargetGroupSinkStomp9410
